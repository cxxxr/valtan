#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -Q -- $0 "$@"
|#
(progn ;;init forms
  (ros:ensure-asdf)
  #+quicklisp(ql:quickload '("cl-project" "alexandria" "command-line-arguments") :silent t)
  )

(defpackage :ros.script.valtan-init.3780739288
  (:use :cl :command-line-arguments))
(in-package :ros.script.valtan-init.3780739288)

(defparameter +option-spec+
  '((("type" #\t) :type string :documentation "application type (\"browser\" or \"node\")")))

(defun usage ()
  (write-line "valtan-init.ros [options] project-name")
  (write-line "options:")
  (show-option-help +option-spec+))

(defun make-project (path cl-project:*skeleton-directory*)
  (cl-project:make-project path))

(defun init (args &key (type "node"))
  (unless (= 1 (length args))
    (usage)
    (uiop:quit 1))
  (destructuring-bind (name) args
    (make-project (merge-pathnames name (probe-file "."))
                  (alexandria:eswitch (type :test #'string=)
                    ("browser"
                     (asdf:system-relative-pathname :valtan #p"skeleton/browser-skeleton/"))
                    ("node"
                     (asdf:system-relative-pathname :valtan #p"skeleton/node-skeleton/"))))))

(defun main (&rest argv)
  (handle-command-line +option-spec+
                       #'init
                       :command-line argv
                       :rest-arity t))

;;; vim: set ft=lisp lisp:
